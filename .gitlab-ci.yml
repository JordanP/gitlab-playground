image:
  name: docker/compose:1.24.0
  entrypoint: ["/bin/sh", "-c"]

services:
  - docker:dind

stages:
  - build
  - test
  - cover
  - release

variables:
  DOCKER_HOST: tcp://docker:2375/
  #DOCKER_HOST: tcp://localhost:2375
  DOCKER_DRIVER: overlay2
  VERSION: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  IMAGE: $CI_REGISTRY_IMAGE:build-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA

before_script:
  - docker version
  - docker-compose version
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  script:
    - ./scripts/docker-build-push-test-img.sh

py-test-unit:
  stage: test
  variables:
    COVERAGE_FILE: coverage/.coverage.unit
  script:
    - docker pull $IMAGE
    - docker-compose -f docker-compose.yml run -e COVERAGE_FILE test pipenv run pytest -v --capture=no --cov=hello_world --cov-report= --junitxml=coverage/junit-unit.xml tests/unit
  artifacts:
    paths:
    - coverage/

py-test-func:
  stage: test
  variables:
    COVERAGE_FILE: coverage/.coverage.func
  script:
    - docker pull $IMAGE
    - docker-compose -f docker-compose.yml run -e COVERAGE_FILE test pipenv run pytest -v --capture=no --cov=hello_world --cov-report= --junitxml=coverage/junit-func.xml tests/func
  artifacts:
    paths:
    - coverage/

lint:
  stage: test
  script:
    - docker pull $IMAGE
    - docker-compose -f docker-compose.yml run lint

cover:
  stage: cover
  variables:
    COVERAGE_FILE: coverage/.coverage
    CODECOV_TOKEN: 2e46b3f9-08aa-41ac-88b7-bec1c93c8470
  script:
    - docker pull $IMAGE
    - docker-compose -f docker-compose.yml run -e COVERAGE_FILE cover pipenv run coverage combine coverage/
    - docker-compose -f docker-compose.yml run -e COVERAGE_FILE cover
    - docker-compose -f docker-compose.yml run -e COVERAGE_FILE cover pipenv run coverage xml -o coverage/coverage.xml
    - docker-compose -f docker-compose.yml run -e CODECOV_TOKEN cover pipenv run codecov --file coverage/coverage.xml --disable=detect -F python --commit=$CI_COMMIT_SHA --branch=$CI_COMMIT_REF_SLUG
  artifacts:
    paths:
      - coverage/
    reports:
      junit: coverage/*.xml
  coverage: '/TOTAL.*\s(\d+)%/'

release-image:
  stage: release
  script:
    - ./scripts/docker-build-push-prod-img.sh
  #only:
  #  - master
